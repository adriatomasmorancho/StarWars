// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using StarWars.Infrastructure.Contracts.EntitiesDB;

namespace StarWars.Infrastructure.Impl.DbContext
{
    public partial class SWDBContext : Microsoft.EntityFrameworkCore.DbContext
    {
        public SWDBContext()
        {
        }

        public SWDBContext(DbContextOptions<SWDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Planet> Planets { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=074BCN2024\\SQLEXPRESS;Initial Catalog=SWDB;User ID=adria;Password=1234");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Planet>(entity =>
            {
                entity.Property(e => e.Clima)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.NombrePlaneta)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Poblacion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasMaxLength(250);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}